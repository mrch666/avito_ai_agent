name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r Avito_autoload/mcp_service/requirements.txt
        
    - name: Run tests
      env:
        AVITO_LOGIN: ${{ secrets.AVITO_LOGIN }}
        AVITO_PASSWORD: ${{ secrets.AVITO_PASSWORD }}
      run: |
        docker-compose up -d selenium-hub chrome
        sleep 30  # Ждем инициализации контейнеров
        python -m pytest -v
        docker-compose down
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd ~/avito
          git pull origin main
          
          # Создаем .env файл
          echo "AVITO_LOGIN=${{ secrets.AVITO_LOGIN }}" > .env
          echo "AVITO_PASSWORD=${{ secrets.AVITO_PASSWORD }}" >> .env
          
          # Останавливаем старые контейнеры
          docker-compose down
          
          # Удаляем старые образы
          docker image prune -f
          
          # Собираем и запускаем новые контейнеры
          docker-compose build --no-cache avito-mcp
          docker-compose up -d
          
          # Проверяем статус сервисов
          echo "Waiting for services to start..."
          sleep 30
          
          # Проверяем здоровье MCP сервиса
          if curl -f http://localhost:8080/api/v1/health; then
            echo "MCP service is healthy"
          else
            echo "MCP service health check failed"
            exit 1
          fi
          
          # Проверяем здоровье Selenium Hub
          if curl -f http://localhost:4444/wd/hub/status; then
            echo "Selenium Hub is healthy"
          else
            echo "Selenium Hub health check failed"
            exit 1
          fi 